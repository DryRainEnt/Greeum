[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "greeum"
version = "3.1.1rc3.dev3"
description = "Context-Dependent Neural Memory System for LLMs with GraphIndex beam search, STM/LTM consolidation, and semantic tagging"
authors = [ {name = "DryRainEnt", email="kachirjsdn@gmail.com"} ]
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.10"
license = "MIT"
keywords = ["memory", "LLM", "RAG"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10", 
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Operating System :: OS Independent",
]
dependencies = [
    "rich>=13.4.0",
    "click>=8.1.0",
    "numpy>=1.24.0",
    "sqlalchemy>=2.0.0",
    "pydantic>=2.0.0",
    "anyio>=4.5",
    "requests>=2.25.0",
    "flask>=2.0.0",
    "flask-restx>=0.5.1",
    "flask-cors>=3.0.10",
    "python-dotenv>=0.19.0",
    "python-dateutil>=2.8.2",
    "sentence-transformers>=2.2.0",  # Required for v3.1.1+ semantic embeddings
    "psutil>=5.9.0",  # Required for v3.1.1rc2.dev8+ orphan process cleanup
    "fastapi>=0.110.0",
    "uvicorn[standard]>=0.22.0",
]

[project.optional-dependencies]
test = ["pytest>=7.0", "pytest-cov", "pytest-xdist>=3.0", "responses>=0.23.0"]
dev = ["black", "isort", "flake8", "ruff"]
mcp-http = ["fastapi>=0.110.0", "uvicorn[standard]>=0.22.0"]
full = [
    "sentence-transformers>=2.2.0",
    "openai>=0.27.0", 
    "faiss-cpu>=1.7.4",
    "keybert>=0.7.0",
    "scikit-learn>=1.3.0",
    "transformers>=4.40.0",
    "spacy>=3.5.0",
]

[tool.setuptools.packages.find]
include = ["greeum*"]

[tool.setuptools.package-data]
"greeum" = ["py.typed"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
# Ignore some low-priority or legacy issues temporarily
extend-ignore = [
    "F401", # unused imports
    "F841", # unused variables
    "F541", # extraneous f-string
    "E402", # module level import not at top
    "E722", # bare except
    "F811"  # redefinition of variable
]

[tool.pytest.ini_options]
# 테스트 성능 최적화 설정
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# 마커 설정
markers = [
    "fast: 빠른 단위 테스트 (< 1초)",
    "slow: 시간이 오래 걸리는 테스트 (1-10초)",
    "integration: 통합 테스트",
    "performance: 성능 테스트 (> 10초)",
    "database: 데이터베이스 테스트",
    "mcp: MCP 관련 테스트",
    "embedding: 임베딩 모델 테스트"
]

# 기본 옵션
addopts = [
    "--strict-markers",
    "--strict-config",
    "--tb=short",
    "--durations=10"
]

# 병렬 실행 설정 (기본값)
# pytest -n auto 로 실행 시 자동 병렬화

[project.scripts]
greeum = "greeum.cli:main"
